require 'rake'
require 'fileutils'
include FileUtils

class String
  def slash(path)
    if self =~ /\/$/
      return self + path
    end

    return self + '/' + path
  end
end

version = 'v3.5'
compileTarget = ENV.include?('target') ? ENV['target'] : 'debug'
project = "Machine.Specifications"
frameworkDir = File.join(ENV['windir'].dup, 'Microsoft.NET', 'Framework', version)
msbuild = File.join(frameworkDir, 'msbuild.exe')

task :setup => [ "setup:all" ]

file ".setup-done" => [ "rakefile" ] do
  Rake::Task["setup:all"].invoke
end

namespace :setup do
  task :all do
    touch ".setup-done"
  end
end

desc "Build and run specs"
task :default => [ "build", "specs:run" ]

desc "Build"
task :build => [ ".setup-done" ] do
  sh "#{msbuild} Source/#{project}.sln /property:Configuration=#{compileTarget}"
end

namespace :specs do
  task :view => :run do
    system "start Specs/#{project}.Specs.html"
  end

  task :run do
    puts 'Running Specs...'
    specs = ["Machine.Specifications.Specs.dll", "Machine.Specifications.Reporting.Specs.dll", "Machine.Specifications.ConsoleRunner.Specs.dll"].map {|spec| "Build/#{compileTarget}/Tests/#{spec}"}
    sh "Build/#{compileTarget}/Machine.Specifications.ConsoleRunner.exe", "--html", "Specs/#{project}.Specs.html", "-x", "example", *specs
    puts "Wrote specs to Specs/#{project}.Specs.html, run 'rake specs:view' to see them"
  end
end

desc "Open solution in VS"
task :sln do
  Thread.new do
    system "devenv Source/#{project}.sln"
  end
end

desc "Rebuild"
task :rebuild => [ ".setup-done" ] do
  sh "#{msbuild} Source/#{project}.sln /t:Rebuild /property:Configuration=#{compileTarget}"
end

desc "Clean"
task :clean do
  sh "#{msbuild} Source/#{project}.sln /t:Clean /property:Configuration=#{compileTarget}"
end
