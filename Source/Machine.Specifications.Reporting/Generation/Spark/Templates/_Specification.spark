<a name="${spec.Id}">${spec.Name}</a>

<if condition="spec.Status == Status.Failing">
  <div class="failure">
    &lArr; FAILED
    <div class="prev-next-links">
      <a if="((ICanFail) spec).Previous != null"
         href="#${((ICanFail) spec).Previous.Id}" title="Go to previous failed specification">&uArr;</a>
      <a if="((ICanFail) spec).Next != null"
         href="#${((ICanFail) spec).Next.Id}" title="Go to next failed specification">&dArr;</a>
    </div>
  </div>
  <p class="exception_type">
    ${spec.Exception.TypeName}
  </p>
  <pre class="exception_message">${spec.Exception}</pre>
</if>

<div if="spec.Status == Status.NotImplemented" class="notimplemented">
  &lArr; NOT IMPLEMENTED
  <div class="prev-next-links">
    <a if="((ICanBeNotImplemented) spec).Previous != null"
       href="#${((ICanBeNotImplemented) spec).Previous.Id}" title="Go to previous unimplemented specification">&uArr;</a>
    <a if="((ICanBeNotImplemented) spec).Next != null"
       href="#${((ICanBeNotImplemented) spec).Next.Id}" title="Go to next unimplemented specification">&dArr;</a>
  </div>
</div>

<for each="var supplement in spec.Supplements">
  <for each="var item in supplement.Value">
    <if condition='item.Key.StartsWith("text-")'>
      <var name="Guid.NewGuid()" />
      <div>
        [<a id="${name}_link" href="javascript:toggleVisibility('${name}', '${supplement.Key} ${item.Key}');">Show ${supplement.Key} ${item.Key}</a>]
      </div>
      <div id="${name}" style="display: none;">
        <pre>${item.Value}</pre>
      </div>
    </if>
  </for> 
</for>